import config from "../data/config";
import * as Minecraft from "@minecraft/server";
import {World} from "@minecraft/server";
import {flag, getClosestPlayer} from "../util";

export function commandBlockExploitH(event_obj, debug) {
    const block = event_obj.block;
    const player = event_obj.player;

    if(block.typeId === "minecraft:hopper") {
        const pos1 = new Minecraft.BlockLocation(block.location.x + 2, block.location.y + 2, block.location.z + 2);
        const pos2 = new Minecraft.BlockLocation(block.location.x - 2, block.location.y - 2, block.location.z - 2);

        let foundDispenser = false;
        pos1.blocksBetween(pos2).some((block) => {
            const blockType = player.dimension.getBlock(block);
            if(blockType.typeId !== "minecraft:dispenser") return;

            blockType.setType(Minecraft.MinecraftBlockTypes.air);
            foundDispenser = true;
        });

        if(foundDispenser === true) {
            let bad_block = player.dimension.getBlock(
                new Minecraft.BlockLocation(block.location.x, block.location.y, block.location.z)
            );
            bad_block.setType(Minecraft.MinecraftBlockTypes.air);
            // TODO: DEBUG
            let is_strange = bad_block === block;
            World.say("§r§6[§aScythe§6]§r §a§lDEBUG: §r§aCommand Block Exploit H: Strange?: bad == block? §r§7" + is_strange);
            return true;
        }
    }
    return false;
}

export function commandBlockExploitF(event_obj, debug) {
    const player = event_obj.source;
    const item = event_obj.item;

    // commandblockexploit/f = cancels the placement of cbe items
    if(config.itemLists.cbe_items.includes(item.typeId)) {
        flag(
            player,
            "CommandBlockExploit",
            "F",
            "Exploit",
            "block", item.typeId,
            undefined,
            undefined,
            player.selectedSlot
        );
        event_obj.cancel = true;
        return true;
    }
    return false;
}

export function commandBlockExploitG(entityCreate, debug) {
    const entity = entityCreate.entity;

    if(config.modules.commandblockexploitG.entities.includes(entity.typeId.toLowerCase())) {
        flag(
            getClosestPlayer(entity),
            "CommandBlockExploit",
            "G",
            "Exploit",
            "entity",
            entity.typeId
        );
        entity.kill();
        return true;
    } else if(config.modules.commandblockexploitG.npc && entity.typeId === "minecraft:npc") {
        entity.runCommandAsync("scoreboard players operation @s npc = scythe:config npc");
        entity.runCommandAsync("testfor @s[scores={npc=1..}]").then((commandResult) => {
            if(commandResult.successCount < 1) return; // check it
            flag(
                getClosestPlayer(entity),
                "CommandBlockExploit",
                "G",
                "Exploit",
                "entity",
                entity.typeId
            );
            entity.kill();
            return true;
        });
    }
    return false;
}
